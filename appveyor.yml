version: 1.0.0.{build}
configuration: Release
force_https_clone: true

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

environment:
  OSS_KEY:
    secure: QYINaAPQnhU322eIDgzcbAACcK/J4RJiIMuId3nHMEE=
  OSS_SECRET:
    secure: o2spLdE6KXX2wiFtTBG8YUt9UYIhTs3k8DIb2K0GFTU=
  OSS_BUCKET: 
    secure: w+QucFgKS4LRjrAOGhvbhg==
  OSS_HOST: 
    secure: jNISX23HkjFxTHBemBYw2i7CuXrKhc4E+YnAmqFNRXo=    
  UPLOAD_SCRIPT: 
    secure: AUhApkEiKE/FYomjoOoKttLqIwx0lEuoxAUQ9/DPS8DQzw0RWJrL8kqgkevz6/D5Hyzu+OOimrxF/OZIgM686og9lbkZeWW8hFD1ZL0TDik=
  UPLOAD_SCRIPT_TOKEN:
    secure: FdOVBqFDwaINVA0nSA2wCnTWFcwI6NdEk4m/VWMG3g2EbJ9EKU2ntJQJegiyATrI
    
install:
  - ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
  - cmd: appveyor-tools\secure-file -decrypt path-to\encrypted-filename.ext.enc -secret %my_secret%
  - sh: ./appveyor-tools/secure-file -decrypt path-to/encrypted-filename.ext.enc -secret $my_secret
  
cache:
# - '%APPVEYOR_BUILD_FOLDER%\ConsoleTest\packages -> %APPVEYOR_BUILD_FOLDER%\ConsoleTest\*\packages.config'

before_build:
- cmd: >-
    nuget restore "%APPVEYOR_BUILD_FOLDER%\ConsoleTest\ConsoleTest.sln" -verbosity detailed

build:
  project: ./ConsoleTest/ConsoleTest.sln
  publish_wap_xcopy: true
  verbosity: minimal
build_script:
- cmd: >-
     msbuild "%APPVEYOR_BUILD_FOLDER%\ConsoleTest\ConsoleTest.sln" /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" /property:Configuration=Release;DebugType=full /p:DeployOnBuild=True /p:ExcludeGeneratedDebugSymbol=False /p:AutoParameterizationWebConfigConnectionStrings=False
after_build:
- ps: >-   
    7z a -tzip ArchTest.zip ${env:APPVEYOR_BUILD_FOLDER}\ConsoleTest\ConsoleTest\Bin\Release\*;
    
test: off

artifacts:
- path: ArchTest.zip
  name: ArchTest  

deploy_script:
- ps: >-    
    echo $artifacts;
     echo "v$env:APPVEYOR_BUILD_VERSION" | Out-File version.txt -Encoding ASCII;
     Invoke-WebRequest -OutFile .\upload.ps1 -Header @{"Authorization" = "token "+${env:UPLOAD_SCRIPT_TOKEN}} -Uri ${env:UPLOAD_SCRIPT};
    
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
